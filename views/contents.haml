-# The below three things, the session_links, the logo,
-# and the sidebar, are only meant to be displayed in the
-# book viewer and book editor views. Hence they're not
-# in layout.haml but here.
-#
-# The first one, the session_links, are needed on the
-# front page as well, though, hence they're a template.

= haml :'modules/session_links'

%div#logo
  %a{href: '/'}
    %img{src: '/assets/logo_kl.png'}
    
%nav#sidebar
  - if locals[:model] == :content_fragment
    -# The mobile version's nav menu
    %a#mobile-menu-button= '<i class="fa fa-bars"></i>'
  
  -# Phrase "Table of contents" or "List of exercises",
  -# then the list of items itself.  
  - case locals[:model]
  
  - when :content_fragment
    %heading#toc-heading= I18n.t('toc')
    %section#toc= @toc.html(request.path_info) if @toc
    
  - when :exercise
    %section#loe= haml :'exercises/list'
  
  -# A button for creating a new content fragment or exercise
  - if current_user && current_user.is_admin?
    %form{method: :get, action: "/#{locale}/#{locals[:model].to_s.en.plural}/new"}
      %input{type: :hidden, name: :view_mode, value: :edit}
      - case locals[:model]
      - when :content_fragment
        %input{type: :hidden, name: 'content_fragment[book]', value: @fragment.book}
      - when :exercise
        %input{type: :hidden, name: 'exercise[locale]', value: locale}
        %input{type: :hidden, name: 'exercise[sort_order]', value: 1}
        %select{name: 'exercise[type]'}
          - @exercise_types.each do |t|
            - exercise_type = (@exercise ? @exercise.type : (params[:exercise] ? params[:exercise][:type] : nil))
            - selected = (exercise_type.to_s == t ? 'selected' : nil)
            %option{value: t, selected: selected}= t.split('::').last
      %input{type: :submit, value: '+', class: 'btn fa-input', id: 'new-item-button'}

#content
  
  -# TODO: The following condition has become really ugly. Refactor!
  
  - if ((content_class.include? 'editor') && (view_mode == :edit)) || locals[:model] == :exercise || locals[:model] == :user
    
    -# Editing areas for both content_fragments and exercises each
    -# have their own templates.
    
    = haml :"#{locals[:model].to_s.en.plural}/edit"
    
  - else

    -# Semantically, the handle would belong outside #content
    -# and inside #sidebar, which would make the CSS and JS
    -# unnecessarily more complicated, though.
    
    %a#sidebar-handle= '<i class="fa fa-chevron-left"></i>'
    
    %a.nav-links#prev{href: '#'}= '<i class="fa fa-angle-double-up"></i>'
    %main#articles
    
      -# The single line of code inside of article.haml is
      -# in a separate file so that more articles may continue 
      -# to be loaded via XMLHttpRequest (see eager_loading.coffee
      -# for where that occurs).
      
      = haml :'content_fragments/view'
      
    %a.nav-links#next{href: '#'}= '<i class="fa fa-angle-double-down"></i>'
